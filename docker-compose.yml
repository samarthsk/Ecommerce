services:
  postgres-user:
    image: postgres:15-alpine
    container_name: postgres-user
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sam
    ports:
      - "5433:5432"
    networks:
      - backend
    volumes:
      - pg_data_user:/var/lib/postgresql/data

  postgres-product:
    image: postgres:15-alpine
    container_name: postgres-product
    environment:
      POSTGRES_DB: product_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sam
    ports:
      - "5434:5432"
    networks:
      - backend
    volumes:
      - pg_data_product:/var/lib/postgresql/data

  postgres-order:
    image: postgres:15-alpine
    container_name: postgres-order
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sam
    ports:
      - "5435:5432"
    networks:
      - backend
    volumes:
      - pg_data_order:/var/lib/postgresql/data

  postgres-notification:
    image: postgres:15-alpine
    container_name: postgres-notification
    environment:
      POSTGRES_DB: notification_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sam
    ports:
      - "5436:5432"
    networks:
      - backend
    volumes:
      - pg_data_notification:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8081:8080"
    depends_on:
      - postgres-user
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/user_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sam

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "8082:8080"
    depends_on:
      - postgres-product
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-product:5432/product_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sam

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8083:8080"
    depends_on:
      - postgres-order
      - rabbitmq
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/order_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sam
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8084:8080"
    depends_on:
      - postgres-notification
      - rabbitmq
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-notification:5432/notification_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sam
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

networks:
  backend:
    driver: bridge

volumes:
  pg_data_user:
  pg_data_product:
  pg_data_order:
  pg_data_notification: